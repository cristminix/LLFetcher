let a=null;const h=async(n,e)=>new Promise((o,t)=>{if(n==null)return t();var c=0,s=n.transaction([e]).objectStore(e).openCursor();s.onsuccess=(function(r){var i=r.target.result;i?(i.value,c+=1,i.continue()):o(c)}).bind(void 0),s.onerror=function(r){t("error in "+e+": "+r)}}),d=async(n,e)=>new Promise((o,t)=>{if(n==null)return t();var c=0,s=n.transaction([e]).objectStore(e).openCursor();s.onsuccess=(function(r){var i=r.target.result;if(i){var u=i.value,f=JSON.stringify(u);c+=f.length,i.continue()}else o(c)}).bind(void 0),s.onerror=function(r){t("error in "+e+": "+r)}});async function C(){const n=indexedDB.open("main");n.onerror=function(e){},n.onupgradeneeded=function(e){a=e.target.result;let o=a.createObjectStore("prxCache",{keyPath:"key"});o.transaction.oncomplete=function(t){}},n.onsuccess=function(e){a=e.target.result,a.onerror=function(o){}}}async function x(n){if(a){const e=a.transaction("prxCache","readwrite"),o=e.objectStore("prxCache");return new Promise((t,c)=>{e.oncomplete=function(){t(!0)},e.onerror=function(){t(!1)},n.forEach(s=>{let r=o.add(s);r.onsuccess=function(){}})})}}async function l(n){if(a){const e=a.transaction("prxCache","readonly"),o=e.objectStore("prxCache");return new Promise((t,c)=>{e.oncomplete=function(){},e.onerror=function(){};let s=o.get(n);s.onsuccess=function(r){t(r.target.result)}})}}async function p(n){if(a){const e=a.transaction("prxCache","readwrite"),o=e.objectStore("prxCache");return new Promise((t,c)=>{e.oncomplete=function(){t(!0)},e.onerror=function(){t(!1)},o.put(n)})}}async function b(n){if(a){const e=a.transaction("prxCache","readwrite"),o=e.objectStore("prxCache");return new Promise((t,c)=>{e.oncomplete=function(){t(!0)},e.onerror=function(){t(!1)},o.delete(n)})}}chrome.runtime.onMessage.addListener((n,e,o)=>{const{name:t,data:c,key:s}=n;if(t!=="db.create"){if(t!=="db.update"){if(t!=="db.delete"){if(t!=="prxCache.clear"){if(t==="prxCache.count")h(a,"prxCache").then(r=>{o(r)});else if(t==="prxCache.size")d(a,"prxCache").then(r=>{o(r)});else if(t==="prxCache.get")l(c.key).then(r=>{o(r)});else if(t==="prxCache.create")C();else if(t==="prxCache.update"){if(c.records){const{records:r}=c;p(r[0])}}else if(t==="prxCache.insert"){if(c.records){const{records:r}=c,i=r[0];l(i.key).then(u=>{u?(console.log(`Update existing rec:${u.key}`),p(i)):(console.log(`insert prxCache:${i.key}`),x(r))})}}else if(t==="prxCache.delete")c.key&&b(c.key);else if(n.action==="activateTab"){const{url:r,optionPageBaseUrl:i}=n;chrome.tabs.query({url:`${chrome.runtime.getURL(`${i}options.html`)}*`},function(u){var f=u[0];chrome.tabs.update(f.id,{active:!0}),chrome.tabs.update(f.id,{url:r})})}}}}}return!0});
