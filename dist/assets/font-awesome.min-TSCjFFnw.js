var Q=Object.defineProperty;var V=(l,s,t)=>s in l?Q(l,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[s]=t;var c=(l,s,t)=>(V(l,typeof s!="symbol"?s+"":s,t),t);import{j as p,r as k,c as z}from"./index-H9g6PPaV.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))e(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&e(n)}).observe(document,{childList:!0,subtree:!0});function t(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerPolicy&&(r.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?r.credentials="include":i.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function e(i){if(i.ep)return;i.ep=!0;const r=t(i);fetch(i.href,r)}})();const lt="/logo/icon-48.png",ut=({title:l="",label:s=null,onMouseOver:t=d=>d,onMouseOut:e=d=>d,disabled:i=!1,loading:r=!1,icon:n,className:a,caption:o,onClick:u})=>{const d="inline-flex flex-shrink-0 justify-center items-center gap-2 p-2 rounded-md border font-medium bg-white text-gray-700 shadow-sm align-middle hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-2 focus:ring-offset-white transition-all text-xs dark:bg-gray-800 dark:hover:bg-slate-800 dark:border-gray-700 dark:text-gray-400 dark:hover:text-white dark:focus:ring-gray-700 dark:focus:ring-offset-gray-800";return p.jsx("div",{className:"flex",children:p.jsxs("button",{title:l,onMouseOver:h=>t(h),onMouseOut:h=>e(h),disabled:r||i,onClick:h=>u(h),type:"button",className:` ${d} ${a}`,children:[r?p.jsx("span",{className:"animate-spin inline-block w-4 h-4 border-[3px] border-current border-t-transparent text-blue-600 rounded-full",role:"status","aria-label":"loading",children:p.jsx("span",{className:"sr-only",children:"Loading..."})}):"",n&&!r?p.jsx("i",{className:n}):"",o?p.jsx("span",{children:o}):""]})})};let D;const W=new Uint8Array(16);function U(){if(!D&&(D=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!D))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return D(W)}const b=[];for(let l=0;l<256;++l)b.push((l+256).toString(16).slice(1));function J(l,s=0){return b[l[s+0]]+b[l[s+1]]+b[l[s+2]]+b[l[s+3]]+"-"+b[l[s+4]]+b[l[s+5]]+"-"+b[l[s+6]]+b[l[s+7]]+"-"+b[l[s+8]]+b[l[s+9]]+"-"+b[l[s+10]]+b[l[s+11]]+b[l[s+12]]+b[l[s+13]]+b[l[s+14]]+b[l[s+15]]}const K=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),j={randomUUID:K};function H(l,s,t){if(j.randomUUID&&!s&&!l)return j.randomUUID();l=l||{};const e=l.random||(l.rng||U)();if(e[6]=e[6]&15|64,e[8]=e[8]&63|128,s){t=t||0;for(let i=0;i<16;++i)s[t+i]=e[i];return s}return J(e)}const dt=({data:l=[],className:s="",onSelect:t=a=>a,selected:e="",onMouseOver:i=a=>a,onMouseOut:r=a=>a,captionSuffix:n=""})=>{const a="cursor-pointer flex items-center gap-x-3.5 py-2 px-2 rounded-md text-sm text-gray-800 hover:bg-gray-100 focus:ring-2 focus:ring-blue-500 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-gray-300",[o,u]=k.useState(e),[d,h]=k.useState(e),I=(y,w,S)=>{console.log(w),u(w),h(S),t(w),y.preventDefault()},m=H();return k.useEffect(()=>{console.log(l,e);try{if(typeof l[0]=="object"){const y=l.filter(w=>w.value==e)[0].text;h(y)}}catch(y){console.log(y)}},[e]),p.jsx(p.Fragment,{children:p.jsxs("div",{className:"hs-dropdown relative inline-flex [--placement:bottom-left] "+s,children:[p.jsxs("button",{onMouseOut:y=>r(y),onMouseOver:y=>i(y),id:`hs-dropdown-${m}`,type:"button",className:"hs-dropdown-toggle py-1 px-2 inline-flex justify-center items-center gap-2 rounded-md border font-medium bg-white text-gray-700 shadow-sm align-middle hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-white focus:ring-blue-600 transition-all text-sm dark:bg-slate-900 dark:hover:bg-slate-800 dark:border-gray-700 dark:text-gray-400 dark:hover:text-white dark:focus:ring-offset-gray-800",children:[d,p.jsx("svg",{className:"hs-dropdown-open:rotate-180 w-2.5 h-2.5 text-gray-600",width:"16",height:"16",viewBox:"0 0 16 16",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:p.jsx("path",{d:"M2 5L8.16086 10.6869C8.35239 10.8637 8.64761 10.8637 8.83914 10.6869L15 5",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round"})})]}),p.jsx("div",{className:"hs-dropdown-menu  transition-[opacity,margin] duration hs-dropdown-open:opacity-100 opacity-0 hidden z-10 bg-white shadow-md rounded-lg p-2 dark:bg-gray-800 dark:border dark:border-gray-700 dark:divide-gray-700","aria-labelledby":`hs-dropdown-${m}`,children:l.map((y,w)=>{let S=y,x=`${y}${n}`;return typeof y=="object"&&y!==null&&(S=y.value,x=`${y.text}${n}`),p.jsx("a",{className:a,onClick:E=>I(E,S,x),children:x},w)})})]})})};class G{constructor(s,t){c(this,"db_prefix","db_");c(this,"db_id");c(this,"db_name");c(this,"db_new");c(this,"db",null);c(this,"storage");c(this,"stype",0);c(this,"initiator",null);this.db_name=s,this.db_id=this.db_prefix+s,this.db_new=!1;try{this.storage=chrome.storage[t==="local"?"local":"sync"]}catch{this.storage=localStorage,this.stype=1}}setInitiator(s){this.initiator=s}lcfirst(s){return typeof s!="string"||s.length===0?s:s.charAt(0).toLowerCase()+s.slice(1)}getTableCounts(s){const t=this.lcfirst(s),e=this.db.data[t];return e?Object.keys(e).length:0}getDataSize(s,t){if(s){const e=this.lcfirst(s);let i=new TextEncoder().encode(JSON.stringify(this.db.data[e])).length;t(i);return}chrome.storage.local.get(null,function(e){let i=0;for(let r in e)e[r]&&(i+=new TextEncoder().encode(JSON.stringify(e[r])).length);t(i)})}async init(){let s=await this.getItem(this.db_id);this.stype===1?(s=JSON.parse(s),this.db=s):typeof s[this.db_id]<"u"&&(this.db=s[this.db_id]),this.db&&this.db.tables&&this.db.data||(this.validateName(this.db_name)?(this.db={tables:{},data:{}},await this.commit(),this.db_new=!0):this.error("The name '"+this.db_name+"' contains invalid characters"))}async reload(){return await this.init(),this}async drop(){await this.setItem(this.db_id,null),this.db=null}async getItem(s){let t=null;return this.stype===0?t=await this.storage.get([s]):t=await this.storage.getItem([s]),t}async replace(s){await setItem(this.db_id,s)}async setItem(s,t){if(this.stype===0){const e={};return e[s]=t,await this.storage.set(e),!0}else return await this.storage.setItem(s,JSON.stringify(t)),!1}tableCount(){var s=0;for(var t in this.db.tables)this.db.tables.hasOwnProperty(t)&&s++;return s}tableFields(s){return this.db.tables[s].fields}tableExists(s){return typeof this.db.tables[s]!="object"?!1:!!this.db.tables[s]}tableExistsWarn(s){this.tableExists(s)||this.error("The table '"+s+"' does not exist")}columnExists(s,t){var e=!1,i=this.db.tables[s].fields;for(var r in i)if(i[r]===t){e=!0;break}return e}_createTable(s,t){this.db.tables[s]={fields:t,auto_increment:1},this.db.data[s]={}}_dropTable(s){delete this.db.tables[s],delete this.db.data[s]}_truncate(s){this.db.tables[s].auto_increment=1,this.db.data[s]={}}_alterTable(s,t,e){if(this.db.tables[s].fields=this.db.tables[s].fields.concat(t),typeof e<"u"){for(var i in this.db.data[s])if(db.data[s].hasOwnProperty(i))for(var r in t)typeof e=="object"?this.db.data[s][i][t[r]]=e[t[r]]:this.db.data[s][i][t[r]]=e}}_rowCount(s){var t=0;for(var e in this.db.data[s])this.db.data[s].hasOwnProperty(e)&&t++;return t}_insert(s,t){return t.id=this.db.tables[s].auto_increment,this.db.data[s][this.db.tables[s].auto_increment]=t,this.db.tables[s].auto_increment++,t.id}select(s,t,e,i,r,n){var a=null,o=[],u=null,d;for(d=0;d<t.length;d++)a=t[d],u=this.db.data[s][a],o.push(this.clone(u));if(r&&r instanceof Array)for(d=0;d<r.length;d++)o.sort(this.sort_results(r[d][0],r[d].length>1?r[d][1]:null));if(n&&n instanceof Array){for(var h=0;h<n.length;h++){var I={},m=n[h];for(d=0;d<o.length;d++)o[d]!==void 0&&(o[d].hasOwnProperty(m)&&I.hasOwnProperty(o[d][m])?delete o[d]:I[o[d][m]]=1)}var y=[];for(d=0;d<o.length;d++)o[d]!==void 0&&y.push(o[d]);o=y}return e=e&&typeof e=="number"?e:null,i=i&&typeof i=="number"?i:null,e&&i?o=o.slice(e,e+i):e?o=o.slice(e):i&&(o=o.slice(e,i)),o}sort_results(s,t){return function(e,i){var r=typeof e[s]=="string"?e[s].toLowerCase():e[s],n=typeof i[s]=="string"?i[s].toLowerCase():i[s];return t==="DESC"?r===n?0:r<n?1:-1:r===n?0:r>n?1:-1}}queryByValues(s,t){var e=[],i=!1,r=null;for(var n in this.db.data[s])if(this.db.data[s].hasOwnProperty(n)){r=this.db.data[s][n],i=!0;for(var a in t)if(t.hasOwnProperty(a)){if(typeof t[a]=="string"){if(r[a]===null||r[a].toString().toLowerCase()!==t[a].toString().toLowerCase()){i=!1;break}}else if(r[a]!==t[a]){i=!1;break}}i&&e.push(n)}return e}queryByFunction(s,t){var e=[],i=null;for(var r in this.db.data[s])this.db.data[s].hasOwnProperty(r)&&(i=this.db.data[s][r],t(this.clone(i))===!0&&e.push(r));return e}getIDs(s){var t=[];for(var e in this.db.data[s])this.db.data[s].hasOwnProperty(e)&&t.push(e);return t}_deleteRows(s,t){for(var e=0;e<t.length;e++)this.db.data[s].hasOwnProperty(t[e])&&delete this.db.data[s][t[e]];return t.length}_update(s,t,e){for(var i="",r=0,n=0;n<t.length;n++){i=t[n];var a=e(this.clone(this.db.data[s][i]));if(a){delete a.id;var o=this.db.data[s][i];for(var u in a)a.hasOwnProperty(u)&&(o[u]=a[u]);this.db.data[s][i]=this.validFields(s,o),r++}}return r}async commit(){this.stype===0?await this.setItem(this.db_id,this.db):await this.setItem(this.db_id,this.serialize())}serialize(){return this.db}error(s){console.error(s)}clone(s){var t={};for(var e in s)s.hasOwnProperty(e)&&(t[e]=s[e]);return t}validateName(s){return!s.toString().match(/[^a-z_0-9]/ig)}validFields(s,t){var e="",i={};for(e in t){var r=this.db.tables[s].fields.indexOf(e);r===-1&&this.error("Invalid query parameter: "+e),i[e]=t[e]}return i}validateData(s,t){for(var e="",i={},r=0;r<this.db.tables[s].fields.length;r++)e=this.db.tables[s].fields[r],i[e]=t[e]===null||t[e]===void 0?null:t[e];return i}isNew(s){return setTimeout(()=>{s(this.db_new)},100)}createTable(s,t){var e=!1;if(!this.validateName(s))this.error("The database name '"+s+"' contains invalid characters.");else if(this.tableExists(s))this.error("The table name '"+s+"' already exists.");else{var i=!0,r;for(r=0;r<t.length;r++)if(!this.validateName(t[r])){i=!1;break}if(i){var n={};for(r=0;r<t.length;r++)n[t[r]]=!0;delete n.id,t=["id"];for(var a in n)n.hasOwnProperty(a)&&t.push(a);this._createTable(s,t),e=!0}else this.error("One or more field names in the table definition contains invalid characters")}return e}createTableWithData(s,t){(typeof t!="object"||!t.length||t.length<1)&&this.error("Data supplied isn't in object form. Example: [{k:v,k:v},{k:v,k:v} ..]");var e=Object.keys(t[0]);if(this.createTable(s,e)){this.commit();for(var i=0;i<t.length;i++)insert(s,t[i])||this.error("Failed to insert record: ["+JSON.stringify(t[i])+"]");this.commit()}return!0}dropTable(s){this.tableExistsWarn(s),this._dropTable(s)}truncate(s){this.tableExistsWarn(s),this._truncate(s)}alterTable(s,t,e){var i=!1;if(!this.validateName(s))this.error("The database name '"+s+"' contains invalid characters");else if(typeof t=="object"){var r=!0,n;for(n=0;n<t.length;n++)if(!this.validateName(t[n])){r=!1;break}if(r){var a={};for(n=0;n<t.length;n++)a[t[n]]=!0;delete a.id,t=[];for(var o in a)a.hasOwnProperty(o)&&t.push(o);this._alterTable(s,t,e),i=!0}else this.error("One or more field names in the table definition contains invalid characters")}else if(typeof t=="string")if(this.validateName(t)){var u=[];u.push(t),this._alterTable(s,u,e),i=!0}else this.error("One or more field names in the table definition contains invalid characters");return i}rowCount(s){return this.tableExistsWarn(s),this._rowCount(s)}insert(s,t){return this.tableExistsWarn(s),this._insert(s,this.validateData(s,t))}insertOrUpdate(s,t,e){this.tableExistsWarn(s);var i=[];if(t?typeof t=="object"?i=this.queryByValues(s,this.validFields(s,t)):typeof t=="function"&&(i=this.queryByFunction(s,t)):i=this.getIDs(s),i.length===0)return this._insert(s,this.validateData(s,e));var r=[];return this._update(s,i,function(n){return r.push(n.id),e}),r}update(s,t,e){this.tableExistsWarn(s);var i=[];return t?typeof t=="object"?i=this.queryByValues(s,this.validFields(s,t)):typeof t=="function"&&(i=this.queryByFunction(s,t)):i=this.getIDs(s),this._update(s,i,e)}query(s,t,e,i,r,n){this.tableExistsWarn(s);var a=[];return t?typeof t=="object"?a=this.queryByValues(s,this.validFields(s,t),e,i):typeof t=="function"&&(a=this.queryByFunction(s,t,e,i)):a=this.getIDs(s,e,i),this.select(s,a,i,e,r,n)}queryAll(s,t){return t?this.query(s,t.hasOwnProperty("query")?t.query:null,t.hasOwnProperty("limit")?t.limit:null,t.hasOwnProperty("start")?t.start:null,t.hasOwnProperty("sort")?t.sort:null,t.hasOwnProperty("distinct")?t.distinct:null):this.query(s)}deleteRows(s,t){this.tableExistsWarn(s);var e=[];return t?typeof t=="object"?e=this.queryByValues(s,this.validFields(s,t)):typeof t=="function"&&(e=this.queryByFunction(s,t)):e=this.getIDs(s),this._deleteRows(s,e)}}function T(l){const s=l.getFullYear(),t=(l.getMonth()+1).toString().padStart(2,"0"),e=l.getDate().toString().padStart(2,"0"),i=l.getHours().toString().padStart(2,"0"),r=l.getMinutes().toString().padStart(2,"0"),n=l.getSeconds().toString().padStart(2,"0");return`${s}-${t}-${e} ${i}:${r}:${n}`}const f=class f{constructor(){c(this,"db",null);c(this,"database","learning");c(this,"type","collection");f.connection||(f.connection=new G(this.database,"local"),f.connection.setInitiator(this.constructor.name)),this.db=f.connection}async getCount(){}async initTable(){this.table&&(this.db.tableExists(this.table)||(this.db.createTable(this.table,this.fields),await this.db.commit()))}async initDB(){await this.db.init(),this instanceof f?await this.initTable():console.error(`${this.constructor.name}.initTable() not implemented`)}singleResult(s){return s.length>0?s[0]:null}singleQuery(s){if(!this.table)return console.error(`${this.constructor.name}.singleQuery() table is not specified`),null;const t=this.db.queryAll(this.table,s);return this.singleResult(t)}query(s){return this.table?this.db.queryAll(this.table,s):(console.error(`${this.constructor.name}.query() table is not specified`),[])}getList(){return this.db.queryAll(this.table)}getAll(){return this.db.queryAll(this.table)}static async getInstance(){return this.instance instanceof this||(this.instance=this.factory(),await this.instance.initDB(),f.instances.push(this.instance)),this.instance}static gotInstance(){return this.instance instanceof this||(this.instance=this.factory(),f.instances.push(this.instance)),this.instance}static factory(){return new this}static async prepare(){}async sync(){this.db.reload()}async deleteRows(s){await this.db.deleteRows(this.table,s),await this.db.commit()}async drop(){if(this instanceof f){await this.db.drop();for(let s in f.instances){const t=f.instances[s];await t.initDB(),t.table==="app"&&await t.init()}}else console.error(`${this.constructor.name}.drop() only implemented for DB instaces`)}async dropTable(){this.db.dropTable(this.table),await this.db.commit();for(let s in f.instances){const t=f.instances[s];await t.initDB(),t.table==="app"&&await t.init()}}async truncate(){this.db.deleteRows(this.table),await this.db.commit()}static async isFresh(){}};c(f,"instance",null),c(f,"instances",[]),c(f,"configSet",null),c(f,"connection",null);let g=f;class O extends g{constructor(){super(...arguments);c(this,"table","app");c(this,"fields",["version","state","lastCourseSlug","nav","freshInstall"]);c(this,"type","single");c(this,"version","2.0");c(this,"defaultNav","welcome");c(this,"rowExists",!1)}get(){const t=this.version,e=this.db.queryAll(this.table,{query:{version:t}});return this.singleResult(e)}async init(t=""){let e=this.get();if(e)t!==""&&e.lastCourseSlug!==t&&(e.lastCourseSlug=t,console.log(`App.init() update courseSlug=${t}`),await this.update(i=>(i.lastCourseSlug=t,i)));else{const n=t,a=this.defaultNav;e={id:0,state:0,version:this.version,lastCourseSlug:n,nav:a},e.id=this.db.insert(this.table,e),await this.db.commit(),this.rowExists=!0}return e}async setState(t,e){await this.update(i=>(i.state=t,e&&(i.lastCourseSlug=e),i))}async setNav(t){await this.update(e=>(e.nav=t,e))}async update(t){const e=this.version;this.db.update(this.table,{version:e},t),await this.db.commit()}}class N extends g{constructor(){super(...arguments);c(this,"table","author");c(this,"fields",["name","slug","biography","shortBiography","courseIds"])}getBySlug(t){return this.singleQuery({query:{slug:t}})}getById(t){return this.singleQuery({query:{id:t}})}getListByCourse(t){const e=[];if(!t)return e;for(let i in t.authorIds){const r=this.getById(t.authorIds[i]);r&&e.push(r)}return e}async create(t,e,i,r,n){let a=this.getBySlug(e);if(a){const o=a.courseIds;o.includes(n)||(o.push(n),this.db.update(this.table,{slug:e},u=>(u.courseIds=o,u)),await this.db.commit(),a.courseIds=o)}else{const o=[];typeof n=="number"&&o.push(n),a={id:0,name:t,slug:e,biography:i,shortBiography:r,courseIds:o},a.id=this.db.insert(this.table,a),await this.db.commit()}return a}}class A extends g{constructor(){super(...arguments);c(this,"table","section");c(this,"fields",["courseId","slug","title","tocIds","itemStars"])}getBySlug(t,e){return this.singleQuery({query:{slug:t,courseId:e}})}get(t){return this.singleQuery({query:{id:t}})}getList(){return this.db.queryAll(this.table)}getListByCourseId(t){return this.query({query:{courseId:t}})}async create(t,e,i,r=[]){let n=this.getBySlug(e,i);return n?console.error(`${this.constructor.name}.create() section row exists`):(n={id:0,courseId:i,title:t,slug:e,tocIds:[],itemStars:r},n.id=this.db.insert(this.table,n),await this.db.commit()),n}async updateTocIds(t,e){let i=this.get(t);return i?(this.db.update(this.table,{id:t},r=>(r.tocIds=e,r)),await this.db.commit(),i.tocIds=e):console.error(`${this.constructor.name}.updateTocIds() toc row not exists`),i}}class F extends g{constructor(){super(...arguments);c(this,"table","toc");c(this,"fields",["sectionId","title","slug","url","duration","captionUrl","captionFmt","streamLocationIds","itemStar","vStatusUrn"])}getListBySectionId(t){return this.query({query:{sectionId:t}})}getBySlug(t,e){return this.singleQuery({query:{slug:t,sectionId:e}})}get(t){return this.singleQuery({query:{id:t}})}getByItemStar(t){return this.singleQuery({query:{itemStar:t}})}async update(t,e,i,r,n){const a=this.get(t);return a?(this.db.update(this.table,{id:t},o=>(o.captionUrl=i,o.captionFmt=r,o.streamLocationIds=n,o.url=e,o)),a.streamLocationIds=n,await this.db.commit()):console.warn(`${this.constructor.name}.update() row is not exists`),a}async create(t,e,i,r,n,a,o,u,d){let h=this.getBySlug(e,o);return h?console.error(`${this.constructor.name}.create() toc row exists`):(h={id:0,sectionId:o,title:t,slug:e,url:i,duration:r,captionUrl:n,captionFmt:a,streamLocationIds:[],itemStar:u,vStatusUrn:d},h.id=this.db.insert("toc",h),await this.db.commit()),h}}class q extends g{constructor(){super(...arguments);c(this,"table","course");c(this,"fields",["title","slug","duration","sourceCodeRepository","description","authorIds","urn"])}getBySlug(t){const e=this.db.queryAll(this.table,{query:{slug:t}});return this.singleResult(e)}async getLastSlug(){const e=(await O.getInstance()).get();return e?e.lastCourseSlug:""}async setLastSlug(t){const e=await O.getInstance();t!==""&&(console.log(`App.init() update courseSlug=${t}`),await e.update(i=>(i.lastCourseSlug=t,i)))}async getCoursePageData(t){if(!t)return null;const e=await N.getInstance(),i=await A.getInstance(),r=await F.getInstance();let n=null,a=[],o=[],u={};if(n=this.getBySlug(t),n){a=e.getListByCourse(n),o=i.getListByCourseId(n.id);for(let d in o){const h=o[d];u[h.slug]=r.getListBySectionId(h.id)}}return{course:n,authors:a,sections:o,tocs:u}}async getCourseSecsTocs(t){let e=[],i={};const r=await A.getInstance(),n=await F.getInstance();e=r.getList(t);for(let a in e){const o=e[a];i[o.slug]=n.getListBySectionId(o.id)}return{sections:e,tocs:i}}getList(){return this.db.queryAll(this.table)}getById(t){return this.singleQuery({query:{id:t}})}async addAuthorId(t,e){const i=this.getById(t);if(i){const r=i.authorIds;r.includes(e)||(r.push(e),this.db.update(this.table,{id:t},n=>(n.authorIds=r,n)),await this.db.commit())}return i}async create(t,e,i,r,n,a){let o=this.getBySlug(e);return o?console.error(`${this.constructor.name}.create() rowExist`):(o={id:0,title:t,slug:e,duration:i,sourceCodeRepository:r,description:n,authorIds:[],urn:a},o.id=this.db.insert(this.table,o),await this.db.commit()),o}}class X extends g{constructor(){super(...arguments);c(this,"table","download");c(this,"fields",["tocId","courseId","downloadId","filename","url","status","exclude","opt","fmt"])}getByTocCourse(t,e){return this.singleQuery({query:{tocId:t,courseId:e}})}getListByCourseId(t,e=""){return e.length>0?this.query({query:{courseId:t,fmt:e}}):this.query({query:{courseId:t}})}getList(){return this.db.queryAll(this.table)}getById(t){return this.singleQuery({query:{id:t}})}getByTocFname(t,e,i){return this.singleQuery({query:{tocId:t,filename:e,courseId:i}})}async create(t,e,i,r,n,a){let o=this.getByTocFname(i,e);return o||(o={id:0,tocId:i,courseId:a,downloadId:0,filename:e,url:t,status:!1,opt:r,fmt:n},o.id=this.db.insert(this.table,o),await this.db.commit()),o}async update(t,e){let i=this.getById(t);return i&&(this.db.update(this.table,{id:t},r=>{for(let n in e)r[n]=e[n],i[n]=e[n];return r}),await this.db.commit()),i}async clear(t){this.db.deleteRows(this.table,{courseId:t}),await this.db.commit()}}class Y extends g{constructor(){super(...arguments);c(this,"table","downloadConfig");c(this,"fields",["courseId","fmtList","selectedFmtList"]);c(this,"type","collection")}getListWithCourse(){const t=q.gotInstance();let e=this.db.queryAll(this.table);return e=e.map(i=>{try{i.course=t.getById(i.courseId).title}catch{}return i}),e}get(t){return this.singleQuery({query:{courseId:t}})}async set(t,e,i){let r=this.get(i);return r?this.db.update(this.table,{courseId:i},n=>(n[t]=e,n)):(r={id:0,courseId:i,fmtList:[],selectedFmtList:""},r[t]=e,r.id=this.db.insert(this.table,r)),await this.db.commit(),r}}class Z extends g{constructor(){super(...arguments);c(this,"table","downloadState");c(this,"fields",["courseId","state","total","success","qstarted","qsuccess","qfails","qprogress","lastTocId","lastDownloadId","percentage","errors"]);c(this,"type","single")}getListWithCourse(){const t=q.gotInstance();let e=this.db.queryAll(this.table);return e=e.map(i=>{try{i.course=t.getById(i.courseId).title}catch{}return i}),e}async get(t){let e=this.singleQuery({query:{courseId:t}});return e||(e={id:0,courseId:t,state:0},e.id=this.db.insert(this.table,e),await this.db.commit()),e}async set(t,e){let i=this.singleQuery({query:{courseId:t}});return i?(this.db.update(this.table,{courseId:t},r=>(r.state=e,r)),i.state=e):(i={id:0,courseId:t,state:e},i.it=db.insert(this.table,i)),await this.db.commit(),i}async setTotal(t,e){this.db.update(this.table,{courseId:t},i=>(i.total=e,i))}async setSuccess(t,e){this.db.update(this.table,{courseId:t},i=>(i.success=e,i))}async setFails(t,e){this.db.update(this.table,{courseId:t},i=>(i.fails=e,i))}async setLastTocId(t,e){this.db.update(this.table,{courseId:t},i=>(i.lastTocId=e,i))}async setState(t,e){this.db.update(this.table,{courseId:t},i=>(i.state=e,i))}async setPercentage(t,e){this.db.update(this.table,{courseId:t},i=>(i.percentage=e,i))}async update(t,e){this.db.update(this.table,{courseId:t},i=>{for(let r in e)i[r]=e[r];return i}),await this.db.commit()}}class _ extends g{constructor(){super(...arguments);c(this,"table","exerciseFile");c(this,"fields",["courseId","name","url","size"])}getByNameAndCourseId(t,e){return this.singleQuery({query:{name:t,courseId:e}})}getListByCourseId(t){return this.query({query:{courseId:t}})}async create(t,e,i,r){let n=this.getByNameAndCourseId(t,r);return n||(n={id:0,courseId:r,name:t,url:e,size:i},n.id=this.db.insert(this.table,n),await this.db.commit()),n}}class tt extends g{constructor(){super(...arguments);c(this,"table","streamLocation");c(this,"fields",["tocId","fmt","url","expiresAt"])}async deleteByTocId(t){await this.deleteRows({query:{tocId:t}})}getByTocId(t,e){return this.singleQuery({query:{tocId:t,fmt:e}})}getListByTocId(t){return this.query({query:{tocId:t}})}async create(t,e,i,r=null){let n=this.getByTocId(i,t);return n?(n.url=e,this.db.update(this.table,a=>(a.url=e,a))):(n={id:0,tocId:i,fmt:t,url:e,expiresAt:r},n.id=this.db.insert(this.table,n)),await this.db.commit(),n}}class et extends g{constructor(){super(...arguments);c(this,"table","message");c(this,"fields",["eventName","data","target","callback"])}get(t,e){return this.singleQuery({query:{eventName:t,target:e}})}async set(t,e,i,r=null){let n=this.get(t,i);return n?(this.db.update(this.table,{eventName:t,target:i},a=>(a.data=e,a.callback=r,a)),n.data=e,n.callback=r):(n={id:0,eventName:t,data:e,target:i,callback:r},n.id=this.db.insert(this.table,n)),await this.db.commit(),n}}class st extends g{constructor(){super(...arguments);c(this,"table","dmSetup");c(this,"fields",["courseId","status","finished","availableFmt","availableTrans","selectedFmt","selectedTrans","exerciseFile","sourceRepo"]);c(this,"type","collection")}getListWithCourse(){const t=q.gotInstance();let e=this.db.queryAll(this.table);return e=e.map(i=>{try{i.course=t.getById(i.courseId).title}catch{}return i}),e}getByCourseId(t){return this.singleQuery({query:{courseId:t}})}getById(t){return this.singleQuery({query:{id:t}})}async create(t,e,i,r,n,a,o,u,d){let h=this.getByCourseId(t);return h?console.error(`${this.constructor.name}.create() rowExist`):(h={id:0,courseId:t,availableFmt:e,selectedFmt:i,availableTrans:r,selectedTrans:n,sourceRepo:a,exerciseFile:o,status:u,finished:d},h.id=this.db.insert(this.table,h),await this.db.commit()),h}async update(t,e){let i=this.getById(t);return i&&(this.db.update(this.table,{id:t},r=>{for(let n in e)r[n]=e[n],i[n]=e[n];return r}),await this.db.commit()),i}async updateByCourseId(t,e){let i=this.getByCourseId(t);return i&&(i=await this.update(i.id,e)),i}}class it extends g{constructor(){super(...arguments);c(this,"table","dmStatus");c(this,"fields",["courseId","vIndex","metaStatus","videoStatus","captionStatus","dtMetaStart","dtVideoStart","dtCaptionStart","dtMetaEnd","dtVideoEnd","dtCaptionEnd","dlMetaRetryCount","dlCaptionRetryCount","dlVideoRetryCount","videoSz","captionSz","finished","interupted"]);c(this,"type","collection")}getListWithCourse(){const t=q.gotInstance();let e=this.db.queryAll(this.table);return e=e.map(i=>{try{i.course=t.getById(i.courseId).title}catch{}return i}),e}getByCourseId(t,e){return this.singleQuery({query:{courseId:t,vIndex:this.createVIndex(e)}})}getById(t){return this.singleQuery({query:{id:t}})}createVIndex(t){const[e,i]=t;return`${e}${i}`}async create(t,e){let i=this.getByCourseId(t,e);return i?console.error(`${this.constructor.name}.create() rowExist`):(i=this.createDefaultRow(t,e),i.id=this.db.insert(this.table,i),await this.db.commit()),i}async update(t,e){let i=this.getById(t);return i&&(this.db.update(this.table,{id:t},r=>{for(let n in e)r[n]=e[n],i[n]=e[n];return r}),await this.db.commit()),i}async updateByCourseId(t,e,i){let r=this.getByCourseId(t,e);return r&&(r=await this.update(r.id,i)),r}async setDlStatus(t,e,i,r,n=0){const a=T(new Date);let o=this.getByCourseId(t,i);o||(o=await this.create(t,i));let u,d;if(e=="caption"){const h=r;d=parseInt(o.videoStatus)+parseInt(r),u={captionStatus:h},r==1?u.dtCaptionStart=a:u.dtCaptionEnd=a,n>=0&&(u.dlCaptionRetryCount=n)}else{const h=r;d=parseInt(o.captionStatus)+parseInt(r),u={videoStatus:h},r==1?u.dtVideoStart=a:u.dtVideoEnd=a,n>=0&&(u.dlVideoRetryCount=n)}return r==-1&&(u.interupted=!0),d==4&&(u.finished=!0,u.interupted=!0),o=await this.updateByCourseId(t,i,u),o}async setDlStatusMeta(t,e,i,r=0){const n=T(new Date);let a=this.getByCourseId(t,e);a||(a=await this.create(t,e));let u={metaStatus:i};return i==1?u.dtMetaStart=n:u.dtMetaEnd=n,r>=0&&(u.dlMetaRetryCount=r),a=await this.updateByCourseId(t,e,u),a}async setDlSize(t,e,i,r){if(!this.getByCourseId(t,i))return;let a={};e=="caption"?a.captionSz=r:a.videoSz=r,await this.updateByCourseId(t,i,a)}createDefaultRow(t,e){const i=T(new Date),r=0,n=0,a=0,o=0,u=i,d=i,h=i,I=i,m=i,y=i,w=0,S=0,x=!1,E=!1,R=0,M=0;return{id:r,courseId:t,courseId:t,vIndex:this.createVIndex(e),metaStatus:n,videoStatus:a,captionStatus:o,dtMetaStart:u,dtVideoStart:d,dtCaptionStart:h,dtMetaEnd:I,dtVideoEnd:m,dtCaptionEnd:y,dlCaptionRetryCount:w,dlVideoRetryCount:S,finished:x,videoSz:R,captionSz:M,interupted:E}}}class rt extends g{constructor(){super(...arguments);c(this,"table","cookie");c(this,"fields",["path","content","dtSaved"]);c(this,"type","collection")}getById(t){return this.singleQuery({query:{id:t}})}getByPath(t){return this.singleQuery({query:{path:t}})}async create(t,e){const i=T(new Date);let r=this.getByPath(t);return r?console.error(`${this.constructor.name}.create() rowExist`):(r={path:t,content:e,dtSaved:i},r.id=this.db.insert(this.table,r),await this.db.commit()),r}async update(t,e){let i=this.getById(t);return i&&(this.db.update(this.table,{id:t},r=>{for(let n in e)r[n]=e[n],i[n]=e[n];return r}),await this.db.commit()),i}async updateByPath(t,e){let i=this.getByPath(t);return i&&(i=await this.update(i.id,e)),i}}class nt extends g{constructor(){super(...arguments);c(this,"table","transcript");c(this,"fields",["tocId","lang","country","fmt","url","autoGenerated"])}async deleteByTocId(t){await this.deleteRows({query:{tocId:t}})}getListByTocId(t){return this.query({query:{tocId:t}})}getListByTocIdAsObject(t){const e=this.getListByTocId(t);let i=null;if(e.length>0){i={};for(const r of e)i[r.lang]=r}return i}getByLang(t,e){return this.singleQuery({query:{lang:t,tocId:e}})}get(t){return this.singleQuery({query:{id:t}})}async create(t,e,i,r,n,a){let o=this.getByLang(e,t);return o?console.error(`${this.constructor.name}.create() toc row exists`):(o={id:0,tocId:t,lang:e,country:i,fmt:r,url:n,autoGenerated:a},o.id=this.db.insert(this.table,o),await this.db.commit()),o}}const L="WebCache_";class B{constructor(s){c(this,"key",null);c(this,"cacheContent",null);c(this,"statusCode",0);c(this,"url",null);this.setUrl(s)}setUrl(s){this.url=s,s&&(this.key=`${L}${z.crc32(s).toString(16)}`)}static async fromKey(s){const t=await chrome.storage.local.get(s);if(t){const e=JSON.parse(t[s]),i=new B(e.url);return i.setCacheContent(e.cacheContent),i.setStatusCode(e.statusCode),i}return null}setCacheContent(s){this.cacheContent=s}setStatusCode(s){this.statusCode=s}async save(){const{key:s,cacheContent:t,statusCode:e,url:i}=this,n=JSON.stringify({statusCode:e,url:i,cacheContent:t});await chrome.storage.local.set({[s]:n})}async delete(){await chrome.storage.local.remove(this.key)}getKey(){return this.key}async remove(){await this.delete()}async load(){let s=await chrome.storage.local.get(this.key),t=null;if(typeof s=="object"){s=s[this.key];try{t=JSON.parse(s),this.setCacheContent(t.cacheContent),this.setStatusCode(t.statusCode),this.setUrl(t.url)}catch{t=null}}t&&t.cacheContent&&(this.cacheContent=t.cacheContent)}getCacheContent(){return this.cacheContent}getStatusCode(){return this.statusCode}isEmpty(){return this.cacheContent==null}}const v=class v{constructor(){c(this,"table","PrxCache")}static getInstance(){return v.instance||(v.instance=new v),v.instance}async clearAll(){Object.keys(await chrome.storage.local.get()).forEach(s=>{s.startsWith(L)&&chrome.storage.local.remove(s)})}async get(s){const t=new B(s);return await t.load(),t}async getByKey(s){return await B.fromKey(s)}async set(s,t,e){const i=new B(s);return i.setCacheContent(t),i.setStatusCode(e),await i.save(),i}async unset(s){const t=await this.get(s);t.isEmpty()||t.remove()}async unsetByKey(s){const t=await this.getByKey(s);t&&(t.isEmpty()||t.remove())}async getCounts(){let s=await chrome.storage.local.get(null),t=0;for(let e in s)e.startsWith(L)&&(t+=1);return t}async getSize(){let s=await chrome.storage.local.get(null),t=0;for(let e in s)if(e.startsWith(L)){let i=new TextEncoder().encode(s[e]).length;t+=i}return t}};c(v,"instance",null);let $=v;const C=class C{constructor(){c(this,"mApp",null);c(this,"mAuthor",null);c(this,"mCourse",null);c(this,"mDownload",null);c(this,"mDownloadConfig",null);c(this,"mDownloadState",null);c(this,"mExerciseFile",null);c(this,"mSection",null);c(this,"mStreamLocation",null);c(this,"mToc",null);c(this,"mDB",null);c(this,"mMessage",null);c(this,"mDMSetup",null);c(this,"mDMStatus",null);c(this,"mTranscript",null);c(this,"mPrxCache",null);c(this,"availables",["DB","App","Author","Course","Download","DownloadConfig","DownloadState","ExerciseFile","Section","StreamLocation","Toc","Message","DMSetup","DMStatus","Cookie","Transcript","PrxCache"])}async ready(s){this.mDB=await g.getInstance(),this.mApp=await O.getInstance(),this.mAuthor=await N.getInstance(),this.mCourse=await q.getInstance(),this.mDownload=await X.getInstance(),this.mDownloadConfig=await Y.getInstance(),this.mDownloadState=await Z.getInstance(),this.mExerciseFile=await _.getInstance(),this.mSection=await A.getInstance(),this.mStreamLocation=await tt.getInstance(),this.mToc=await F.getInstance(),this.mMessage=await et.getInstance(),this.mDMSetup=await st.getInstance(),this.mDMStatus=await it.getInstance(),this.mCookie=await rt.getInstance(),this.mTranscript=await nt.getInstance(),this.mPrxCache=await $.getInstance(),await this.mApp.init(),s()}static getInstance(){return C.instance instanceof C||(C.instance=new C),C.instance}async reload(){await g.connection.reload()}get(s){if(this.availables.includes(s)){const t=`m${s}`;return this[t]}return console.error(`Store.get() ${s} is not available`),null}async getStorageSize(s=null){return new Promise((t,e)=>{g.connection.getDataSize(s,i=>t(i))})}getCounts(s){return g.connection.getTableCounts(s)}};c(C,"instance",null);let P=C;export{ut as B,dt as D,P as S,lt as a,H as v};
